{"version":3,"sources":["store/actions/actions.js","components/users-table/users-table.js","components/add-user/add-user.js","components/delete-user/delete-user.js","containers/app/App.js","serviceWorker.js","store/reducers/reducer.js","index.js"],"names":["addUsers","data","type","payload","UsersTable","props","console","log","useState","sortedUsers","setSortedUsers","users","map","user","key","id","name","username","email","address","city","className","onClick","openAdd","openDelete","sorted","slice","sort","a","b","textA","toUpperCase","textB","sortUsers","AddUser","useForm","register","handleSubmit","errors","useEffect","inputs","document","querySelectorAll","toUpdate","forEach","input","Object","keys","push","style","borderColor","currentUser","editing","find","onSubmit","editUser","closeAdd","postUser","defaultValue","placeholder","ref","required","value","DeleteUser","closeDelete","deletetUser","deleting","App","state","addUserVisible","deleteUserVisible","setState","this","length","fetchUsers","Component","connect","dispatch","axios","get","then","response","catch","error","userData","post","res","addUser","err","delete","deleteUser","patch","sendEditUser","Boolean","window","location","hostname","match","initialState","reducer","action","concat","filter","userindex","findIndex","splice","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a39fa3fd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ADD_USERS = 'ADD_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\n\r\nexport const addUsers = (data) => {\r\n    return {\r\n        type: ADD_USERS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const addUser = (data) => {\r\n    return {\r\n        type: ADD_USER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteUser = (data) => {\r\n    return {\r\n        type: DELETE_USER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const editUser = (data) => {\r\n    return {\r\n        type: EDIT_USER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchUsers = () => {\r\n    \r\n    return dispatch => {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            dispatch(addUsers(response.data))\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            dispatch(addUsers(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const postUser = (data) => {\r\n\r\n    return dispatch => {\r\n        axios.post('https://jsonplaceholder.typicode.com/users', data)\r\n        .then(res => {\r\n          let userData = res.data\r\n          dispatch(addUser(userData))\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }  \r\n}\r\n\r\nexport const sendDeletetUser = (data) => {\r\n\r\n    return dispatch => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${data}`)\r\n        .then(res => {\r\n          dispatch(deleteUser(data))\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }  \r\n}\r\n\r\nexport const sendEditUser = (userData) => {\r\n    const id = userData.editing;\r\n    return dispatch => {\r\n        axios.patch(`https://jsonplaceholder.typicode.com/users/${id}`, userData.data)\r\n        .then(res => {\r\n          dispatch(editUser({res, id}));\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }  \r\n}","import React, {useState} from 'react';\r\nimport './users-table.css';\r\n\r\nconst UsersTable = (props) => {\r\nconsole.log('usersprops', props)\r\n\r\nlet [sortedUsers, setSortedUsers] = useState();\r\n\r\nconst users = props.users.map(user => {\r\n    return (\r\n        <tr key={user.id}>\r\n            <td>{user.id}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.address? user.address.city : ''}</td>\r\n            <td><button type=\"button\" className=\"btn btn-warning\" onClick={() => props.openAdd(user.id)}>Edit</button></td>\r\n            <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => props.openDelete(user.id)}>Delete</button></td>\r\n        </tr>\r\n    )\r\n})\r\n\r\nconst sortUsers = () => {\r\n    let sorted = props.users.slice();\r\n    sorted.sort((a, b) => {\r\n        var textA = a.username.toUpperCase();\r\n        var textB = b.username.toUpperCase();\r\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    });\r\n    const sortedUsers = sorted.map(user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.username}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.address? user.address.city : ''}</td>\r\n                <td><button type=\"button\" className=\"btn btn-warning\" onClick={() => props.openAdd(user.id)}>Edit</button></td>\r\n                <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => props.openDelete(user.id)}>Delete</button></td>\r\n            </tr>\r\n        )\r\n    })\r\n    setSortedUsers(sortedUsers);\r\n}\r\n\r\n    return (\r\n        <div className=\"card table-container \">\r\n        <div className=\"add-user-panel\">\r\n            <div>\r\n                <h4>User List</h4>\r\n            </div>\r\n            <div>\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn btn-primary add-btn\" \r\n                onClick={() => props.openAdd()}>\r\n                    Add New\r\n                </button>\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn btn-primary add-btn\" \r\n                onClick={() => sortUsers()}>\r\n                    Sort\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <table className=\"table\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Name</th>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                    <th>City</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {sortedUsers ? sortedUsers : users}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UsersTable;","import React, {useEffect} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './add-user.css';\r\n\r\nconst AddUser = (props) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = data => {\r\n    if (!props.editing) {\r\n      props.postUser(data);\r\n      props.closeAdd();\r\n    } else {\r\n      let editing = props.editing;\r\n      props.editUser({data, editing});\r\n      props.closeAdd();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const inputs = document.querySelectorAll('input');\r\n    let toUpdate = [];\r\n\r\n    inputs.forEach(input => {\r\n     Object.keys(errors).forEach(key => {\r\n      if (key === input.name) {\r\n        toUpdate.push(input);\r\n      } else {\r\n        input.style.borderColor = \"gray\";\r\n      }\r\n     })\r\n    })\r\n\r\n    toUpdate.forEach(input => {\r\n      input.style.borderColor = 'red';\r\n    })\r\n  }, [errors]);\r\n\r\n  let currentUser = props.editing && props.users.find(user => user.id === props.editing);\r\n\r\n  return (\r\n    <div className=\"card table-container\">\r\n      <div><div><h4>Form</h4></div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-sm-4 col-form-label text-center\">Name</label>\r\n          <div className=\"col-sm-8\">\r\n            <input \r\n            className=\"form-control\" \r\n            defaultValue={currentUser? currentUser.name : ''} \r\n            type=\"text\" \r\n            placeholder=\"name\" \r\n            name=\"name\" \r\n            ref={register({required: true})} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-sm-4 col-form-label text-center\">Email</label>\r\n          <div className=\"col-sm-8\">\r\n            <input \r\n            className=\"form-control\" \r\n            defaultValue={currentUser? currentUser.email : ''} \r\n            type=\"email\" \r\n            placeholder=\"email\" \r\n            name=\"email\" \r\n            ref={register({required: true})} />\r\n          </div>\r\n        </div> \r\n        <div className=\"btn-container\">\r\n          <button \r\n          className=\"btn btn-outline-danger cancel-btn\" onClick={props.closeAdd}>Cancel</button>\r\n          <input className=\"btn btn-success\" value=\"Submit\" type=\"submit\" />\r\n        </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUser","import React from 'react';\r\nimport './delete-user.css';\r\n\r\nconst DeleteUser = (props) => {\r\n    return (\r\n        <div className=\"delete-popup\">\r\n            <div className=\"delete-container card\">\r\n                <div>\r\n                    <h5>Delete</h5>\r\n                </div>\r\n                <div className=\"popup-btn-container\">\r\n                    <button className=\"btn btn-dark\" onClick={props.closeDelete}>Cancel</button>\r\n                    <button \r\n                    className=\"btn btn-danger\" \r\n                    onClick={() => {props.deletetUser(props.deleting); props.closeDelete()}}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteUser","import React, {Component} from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport {fetchUsers, postUser, sendDeletetUser, sendEditUser} from '../../store/actions/actions';\nimport UsersTable from '../../components/users-table/users-table';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AddUser from '../../components/add-user/add-user';\nimport DeleteUser from '../../components/delete-user/delete-user';\n\nclass App extends Component {\n  state = {\n    addUserVisible: false,\n    deleteUserVisible: false,\n    editing: null,\n    deleting: null\n  }\n\n  componentDidMount() {\n    if (this.props.users.length === 0) {\n      this.props.fetchUsers();\n    }\n  }\n\n  openAdd = (id) => {\n    this.setState({addUserVisible: true, editing: id})\n  }\n\n  closeAdd = () => {\n    this.setState({addUserVisible: false, editing: null})\n  }\n\n  openDelete = (id) => {\n    this.setState({deleteUserVisible: true, deleting: id})\n  }\n\n  closeDelete = () => {\n    this.setState({deleteUserVisible: false, deleting: null})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Dashboard</h1>\n        {!this.state.addUserVisible ?\n         <UsersTable \n         users={this.props.users} \n         openAdd={this.openAdd} \n         openDelete={this.openDelete} /> :\n         <AddUser \n         editUser={this.props.editUser} \n         users={this.props.users} \n         editing={this.state.editing} \n         postUser={this.props.postUser} \n         closeAdd={this.closeAdd} />\n        } \n        { this.state.deleteUserVisible && \n          <DeleteUser \n          closeDelete={this.closeDelete} \n          deleting={this.state.deleting} \n          deletetUser={this.props.deletetUser} />}\n      </div>\n    );\n  } \n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n    postUser: (userData) => dispatch(postUser(userData)),\n    deletetUser: (id) => dispatch(sendDeletetUser(id)),\n    editUser: (data) => dispatch(sendEditUser(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ADD_USERS, ADD_USER, DELETE_USER, EDIT_USER} from '../actions/actions'\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let users;\r\n    switch(action.type) {\r\n        case ADD_USERS:\r\n            users = action.payload;\r\n            return {...state, users}\r\n        case ADD_USER:\r\n            users = state.users.concat(action.payload);\r\n            return {...state, users}\r\n        case DELETE_USER:\r\n            users = state.users.filter(user => user.id !== action.payload);\r\n            return {...state, users}\r\n        case EDIT_USER:\r\n            const { id } = action.payload;\r\n            const userindex = state.users.findIndex(user => user.id === id);\r\n            users = state.users.slice();\r\n            users.splice(userindex, 1, action.payload.res.data);\r\n            return {...state, users};\r\n\r\n        default:\r\n            return state;  \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport App from './containers/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/reducer';\n\nconst logger = store => {\n  return next =>{\n      return action =>{\n          console.log('[Middleware] Dispatching', action);\n          const result = next(action);\n          console.log('[Middleware] next state', store.getState());\n          return result;\n      } \n  }\n};\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnchancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}